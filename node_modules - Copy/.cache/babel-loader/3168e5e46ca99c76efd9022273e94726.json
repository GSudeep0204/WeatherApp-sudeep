{"ast":null,"code":"import axios from \"axios\";\nimport { AppContext } from \"../Context/AppContext\";\nimport { useContext } from \"react\";\nimport { GET_DATA_ERROR, GET_DATA_SUCCESS, GET_DATA_LOADING } from \"./Actiontypes\";\n\nconst getdataloading = () => {\n  return {\n    type: GET_DATA_LOADING\n  };\n};\n\nconst getdatasuccess = payload => {\n  return {\n    type: GET_DATA_SUCCESS,\n    payload\n  };\n};\n\nconst getdataerror = () => {\n  return {\n    type: GET_DATA_ERROR\n  };\n};\n\nexport async function GetweatherByCity(e, dispatch) {\n  try {\n    const axios = require(\"axios\");\n\n    const options = {\n      method: 'GET',\n      url: 'https://community-open-weather-map.p.rapidapi.com/forecast/daily',\n      params: {\n        q: `${e}`,\n        // lat: '35',\n        // lon: '139',\n        cnt: '10',\n        units: 'metric'\n      },\n      headers: {\n        'X-RapidAPI-Key': '12aa19a7d5mshac01930e68c38e9p122ad4jsnca3f38e9bed8',\n        'X-RapidAPI-Host': 'community-open-weather-map.p.rapidapi.com'\n      }\n    };\n    let forecast = await axios.request(options);\n    let weather = await axios({\n      url: `http://api.weatherapi.com/v1/current.json?key=1ed8289ee0e54db88d1104939222906&q=${e}`\n    });\n    let weatherData = weather.data;\n    let forecastData = forecast.data;\n    let payload = {\n      weatherData,\n      forecastData\n    };\n    dispatch(getdata);\n  } catch (e) {\n    console.log(e);\n    dispatch(getdataerror);\n  }\n}\n_c = GetweatherByCity;\nexport default function GetweatherByLocation() {\n  const location = position => {\n    const {\n      lontitude,\n      longitude\n    } = position.coord;\n  };\n}\n_c2 = GetweatherByLocation;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GetweatherByCity\");\n$RefreshReg$(_c2, \"GetweatherByLocation\");","map":{"version":3,"names":["axios","AppContext","useContext","GET_DATA_ERROR","GET_DATA_SUCCESS","GET_DATA_LOADING","getdataloading","type","getdatasuccess","payload","getdataerror","GetweatherByCity","e","dispatch","require","options","method","url","params","q","cnt","units","headers","forecast","request","weather","weatherData","data","forecastData","getdata","console","log","GetweatherByLocation","location","position","lontitude","longitude","coord"],"sources":["C:/Users/gudekota sudeep/Desktop/PROJECTS/weather-app/weather/src/Components/Actions.jsx"],"sourcesContent":["import axios from \"axios\"\r\nimport { AppContext } from \"../Context/AppContext\";\r\n\r\nimport { useContext } from \"react\";\r\nimport { GET_DATA_ERROR , GET_DATA_SUCCESS, GET_DATA_LOADING } from \"./Actiontypes\";\r\n\r\n\r\n\r\nconst getdataloading = ()=>{\r\n  return {type:GET_DATA_LOADING};\r\n}\r\n\r\nconst getdatasuccess = (payload)=>{\r\n  return {type:GET_DATA_SUCCESS,payload}\r\n}\r\n\r\nconst getdataerror = ()=>{\r\n  return {type:GET_DATA_ERROR}\r\n}\r\n\r\nexport async function GetweatherByCity(e,dispatch){\r\n \r\ntry{\r\nconst axios = require(\"axios\");\r\n\r\nconst options = {\r\n  method: 'GET',\r\n  url: 'https://community-open-weather-map.p.rapidapi.com/forecast/daily',\r\n  params: {\r\n    q: `${e}`,\r\n    // lat: '35',\r\n    // lon: '139',\r\n     cnt: '10',\r\n    units: 'metric'\r\n  },\r\n  headers: {\r\n    'X-RapidAPI-Key': '12aa19a7d5mshac01930e68c38e9p122ad4jsnca3f38e9bed8',\r\n    'X-RapidAPI-Host': 'community-open-weather-map.p.rapidapi.com'\r\n  }\r\n};\r\n\r\n \r\n   let forecast =  await axios.request(options)\r\n  \r\n    \r\n  let weather = await axios(\r\n    {url:`http://api.weatherapi.com/v1/current.json?key=1ed8289ee0e54db88d1104939222906&q=${e}`}\r\n     )\r\n\r\n   let weatherData = weather.data\r\n   let forecastData = forecast.data\r\n     let payload = { weatherData , forecastData};\r\n\r\n    dispatch(getdata)\r\n    }\r\n\r\n   catch(e){\r\n      console.log(e);\r\n      dispatch(getdataerror);\r\n   } \r\n\r\n   \r\n } \r\n\r\n\r\n\r\nexport default function GetweatherByLocation(){\r\n  \r\n  const location = (position)=>{\r\n    const {lontitude,longitude} = position.coord;\r\n     \r\n  }\r\n}\r\n\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AAEA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,cAAT,EAA0BC,gBAA1B,EAA4CC,gBAA5C,QAAoE,eAApE;;AAIA,MAAMC,cAAc,GAAG,MAAI;EACzB,OAAO;IAACC,IAAI,EAACF;EAAN,CAAP;AACD,CAFD;;AAIA,MAAMG,cAAc,GAAIC,OAAD,IAAW;EAChC,OAAO;IAACF,IAAI,EAACH,gBAAN;IAAuBK;EAAvB,CAAP;AACD,CAFD;;AAIA,MAAMC,YAAY,GAAG,MAAI;EACvB,OAAO;IAACH,IAAI,EAACJ;EAAN,CAAP;AACD,CAFD;;AAIA,OAAO,eAAeQ,gBAAf,CAAgCC,CAAhC,EAAkCC,QAAlC,EAA2C;EAElD,IAAG;IACH,MAAMb,KAAK,GAAGc,OAAO,CAAC,OAAD,CAArB;;IAEA,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAE,KADM;MAEdC,GAAG,EAAE,kEAFS;MAGdC,MAAM,EAAE;QACNC,CAAC,EAAG,GAAEP,CAAE,EADF;QAEN;QACA;QACCQ,GAAG,EAAE,IAJA;QAKNC,KAAK,EAAE;MALD,CAHM;MAUdC,OAAO,EAAE;QACP,kBAAkB,oDADX;QAEP,mBAAmB;MAFZ;IAVK,CAAhB;IAiBG,IAAIC,QAAQ,GAAI,MAAMvB,KAAK,CAACwB,OAAN,CAAcT,OAAd,CAAtB;IAGD,IAAIU,OAAO,GAAG,MAAMzB,KAAK,CACvB;MAACiB,GAAG,EAAE,mFAAkFL,CAAE;IAA1F,CADuB,CAAzB;IAIC,IAAIc,WAAW,GAAGD,OAAO,CAACE,IAA1B;IACA,IAAIC,YAAY,GAAGL,QAAQ,CAACI,IAA5B;IACE,IAAIlB,OAAO,GAAG;MAAEiB,WAAF;MAAgBE;IAAhB,CAAd;IAEDf,QAAQ,CAACgB,OAAD,CAAR;EACC,CAhCL,CAkCG,OAAMjB,CAAN,EAAQ;IACLkB,OAAO,CAACC,GAAR,CAAYnB,CAAZ;IACAC,QAAQ,CAACH,YAAD,CAAR;EACF;AAGF;KA1CoBC,gB;AA8CtB,eAAe,SAASqB,oBAAT,GAA+B;EAE5C,MAAMC,QAAQ,GAAIC,QAAD,IAAY;IAC3B,MAAM;MAACC,SAAD;MAAWC;IAAX,IAAwBF,QAAQ,CAACG,KAAvC;EAED,CAHD;AAID;MANuBL,oB"},"metadata":{},"sourceType":"module"}